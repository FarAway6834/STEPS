C는 재미있따, 배우고 싶다

Q : mr. Quain
A : ms. Aris

Q. 정수형(int)은 어떻게 해요
A. unsigned int는 범자연수 이진수에여
int의 표기법은 3개져.
1. Sign and Magnitude
(임의로 TLA화 시켜서 SAM이라고 부를께요)
2. 1의 보수화 표기법
(ComplmentOfOne, 엄..... COO 넹...^^ 알죠?)
3. 2의 보수화 표기법
(ComplementOfTwo, ㅇ COO ㅋ?)

SAM [sign : is it '-'?][unsigned int] 
문재점 : 뺄샘을 덧샘 처리으로 불가 ㅠㅠ
COO의 - : 보수(부정 (not, ~)연산을 취해준 수)화
문재점1 : 순환 올림(MLB에서 올림 발생 ->  MSB)
문재점2 : +0, -0으로 메모리 낭비
COT : COO의 -0 ~ -(2ⁿ - 1) -> -1 ~ 2ⁿ

SAM은 뺄쌤 처리와 +0, -0처리가 필요합니다
이는 CPU설계에 있어 낭비져.
COO는 순환 올림 처리와 +0, -0처리가 필요합니당. 이것도 CPU에게 있어 SAM보단 덜하지만 낭비져
COT는 그런거 필요 없져

참, 이걸 안말했네여

MSB는 Most Smallist Bit고
MLB는 Most Largest Bit입니당.

Q. 왜 순환올림을 하면 뺄샘이 되는지, 그리고 cot는 왜 필요없는지, 근거 있나요?
A. 수학적으로 증명하져.

(식은 간소화했습니다)
1. (Σ An × 2ⁿ) - (Σ Bn × 2ⁿ) 
= (Σ An × 2ⁿ) + (Σ bool2int(~int2bool(Bn)) × 2ⁿ) + α
= (Σ An × 2ⁿ) + (Σ (1 - Bn) × 2ⁿ) + α
= (Σ An × 2ⁿ) + (Σ Bn × 2ⁿ) + (2ⁿ - 1) + α
2. |α| = (2ⁿ - 1) = MLB올림 - MSB올림
COT에서는
(Σ An × 2ⁿ) - (Σ Bn × 2ⁿ) 
= (Σ An × 2ⁿ) + (Σ (bool2int(~int2bool(Bn)) - 1) × 2ⁿ)
= (Σ An × 2ⁿ) + (Σ (1 - Bn - 1) × 2ⁿ)
= (Σ An × 2ⁿ) + (Σ (- Bn) × 2ⁿ)

Q. 자 그러면 이번화안에 저는 모든 자료형을 알고싶네요
A. 그러쿤요.

Q. char (8bit)은 ASCII, UTF-8등으로 대표되는 인코딩으로 이해한다 치고, int는 방식과 길이를 모르잖습니까?
A. 보통 COT에 (이유는 모르지만 일단 16bit는 너무작으니까) 32bit (4byte)정도로 합니다

Q. 실수형(float, fixed)는여?
A. 아 부동소수점(float)싫어 고정소숫점(fixed)좋아, 왜 부동소숫점은 가수(고정소숫점같은애)에 소숫점은 2ⁿ으로 옮기고 난리야, 숫자 범위땜에 (6.02 × 10²³ (아보가드로 수), (1 ÷ 6.02 × 10²³) (H2(g) 2g = nd 일때 n의 값)) 왜 참 메모리를 낭비 IEEE에서 표준을 만드는지... 암튼 가수모양의 고정소수점말 말할꺼에영, 개인적 원한은 있어요.

정수부.실수부 로 되어있습니다, '.'은 비트랑 상관 없고 해당 소숫점의 특징일태죠.

근데 이건 관심 없어서 바이트 몰라요
보통 32bit, 64bit 이정도 될테죠.

Q. bool은 1bit맞죠?
A. 역시 내 남친이다 Quain
Q. 내가 왜 니 남친이야, 그리고 이건 지식 포스트니까 헛소리는 자제해
A. 그럼이만

Q. 아 진짜... 구조체 관련해서 못물어봤는데... 포인터도... 아아... 짜증나...

===== 작성자의 말 =====
이해하셨는지 질문하겠습니당.
강좌는 Step12.까지 있습니당.

공식 레포 : github.io/FarAway6834/STEPS
(README.md에 각 화가 기록되어있음)